# Script de build final APK avec backend Docker
# Usage: .\scripts\build-final-apk.ps1

param(
    [string]$Profile = "preview",
    [switch]$Production = $false,
    [switch]$SkipBackendCheck = $false
)

Write-Host "üì± BUILD FINAL APK - APPLICATION MOBILE" -ForegroundColor Cyan
Write-Host "=" * 60
Write-Host "Profile: $Profile" -ForegroundColor Yellow
Write-Host "Production: $Production" -ForegroundColor Yellow
Write-Host "Date: $(Get-Date)" -ForegroundColor Yellow
Write-Host ""

# Fonction pour afficher les √©tapes
function Write-Step {
    param([string]$Message)
    Write-Host "üìã $Message" -ForegroundColor Green
}

# Fonction pour g√©rer les erreurs
function Handle-Error {
    param([string]$Message)
    Write-Host "‚ùå ERREUR: $Message" -ForegroundColor Red
    exit 1
}

# 1. V√âRIFICATION DU BACKEND DOCKER
if (-not $SkipBackendCheck) {
    Write-Step "V√©rification du backend Docker..."
    
    try {
        $response = Invoke-RestMethod -Uri "http://localhost:3000/test/ping" -Method Get -TimeoutSec 5
        if ($response.message -eq "Backend fonctionne !") {
            Write-Host "‚úÖ Backend Docker accessible sur localhost:3000" -ForegroundColor Green
        } else {
            Handle-Error "Backend Docker ne r√©pond pas correctement"
        }
    } catch {
        Write-Host "‚ùå Backend Docker non accessible sur localhost:3000" -ForegroundColor Red
        Write-Host "üöÄ D√©marrage automatique du backend Docker..." -ForegroundColor Yellow
        
        # D√©marrer le backend Docker
        docker run -d -p 3000:3000 `
            -e DATABASE_URL="postgresql://postgres:Azerty123*@host.docker.internal:5432/adminapp?schema=public" `
            --name admin_backend_final_build `
            ranimmn/ranouma:backend-final-18-06-2025
        
        if ($LASTEXITCODE -ne 0) {
            Handle-Error "Impossible de d√©marrer le backend Docker"
        }
        
        # Attendre que le backend soit pr√™t
        Write-Host "‚è≥ Attente du d√©marrage du backend..." -ForegroundColor Yellow
        Start-Sleep -Seconds 20
        
        # Tester √† nouveau
        try {
            $response = Invoke-RestMethod -Uri "http://localhost:3000/test/ping" -Method Get -TimeoutSec 5
            Write-Host "‚úÖ Backend Docker d√©marr√© avec succ√®s" -ForegroundColor Green
        } catch {
            Handle-Error "Backend Docker ne d√©marre pas correctement"
        }
    }
    
    # Test des API essentielles
    try {
        $categoriesResponse = Invoke-RestMethod -Uri "http://localhost:3000/categories" -Method Get -TimeoutSec 5
        Write-Host "‚úÖ API Cat√©gories: $($categoriesResponse.data.Count) cat√©gories disponibles" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è API Cat√©gories non accessible (peut affecter l'affichage mobile)" -ForegroundColor Yellow
    }
    
    # Test depuis l'IP du PC
    try {
        $ipResponse = Invoke-RestMethod -Uri "http://192.168.100.187:3000/test/ping" -Method Get -TimeoutSec 5
        Write-Host "‚úÖ Backend accessible depuis IP PC: 192.168.100.187:3000" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è Backend non accessible depuis IP PC (l'auto-d√©couverte utilisera localhost)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚è≠Ô∏è V√©rification backend ignor√©e (--SkipBackendCheck)" -ForegroundColor Yellow
}

# 2. PR√âPARATION DE L'ENVIRONNEMENT MOBILE
Write-Step "Pr√©paration de l'environnement mobile..."

# Aller dans le dossier mobile
if (-not (Test-Path "mobile")) {
    Handle-Error "Dossier mobile non trouv√©"
}

Push-Location "mobile"

try {
    # V√©rifier les d√©pendances
    Write-Host "üì¶ V√©rification des d√©pendances..." -ForegroundColor Yellow
    if (-not (Test-Path "node_modules")) {
        Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow
        npm install
        if ($LASTEXITCODE -ne 0) {
            Handle-Error "√âchec de l'installation des d√©pendances"
        }
    } else {
        Write-Host "‚úÖ D√©pendances d√©j√† install√©es" -ForegroundColor Green
    }
    
    # V√©rifier la configuration EAS
    Write-Host "üîß V√©rification de la configuration EAS..." -ForegroundColor Yellow
    if (-not (Test-Path "eas.json")) {
        Handle-Error "Fichier eas.json non trouv√©"
    }
    
    # V√©rifier la connexion EAS
    Write-Host "üîê V√©rification de la connexion EAS..." -ForegroundColor Yellow
    npx eas whoami
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è Non connect√© √† EAS, tentative de connexion..." -ForegroundColor Yellow
        npx eas login
        if ($LASTEXITCODE -ne 0) {
            Handle-Error "Impossible de se connecter √† EAS"
        }
    }
    
    # 3. BUILD DE L'APK
    Write-Step "Construction de l'APK final..."
    
    if ($Production) {
        Write-Host "üè≠ Build PRODUCTION en cours..." -ForegroundColor Yellow
        npx eas build --platform android --profile production --non-interactive
    } else {
        Write-Host "üß™ Build PREVIEW en cours..." -ForegroundColor Yellow
        npx eas build --platform android --profile $Profile --non-interactive
    }
    
    $buildResult = $LASTEXITCODE
    
    if ($buildResult -eq 0) {
        Write-Host ""
        Write-Host "üéâ APK CONSTRUIT AVEC SUCC√àS !" -ForegroundColor Green
        Write-Host "=" * 60
        
        # Informations sur le build
        Write-Host "üì± Informations du build:" -ForegroundColor Cyan
        Write-Host "   ‚Ä¢ Version: 1.1.0 (versionCode: 2)" -ForegroundColor White
        Write-Host "   ‚Ä¢ Profile: $Profile" -ForegroundColor White
        Write-Host "   ‚Ä¢ Backend: Docker (ranimmn/ranouma:backend-final-18-06-2025)" -ForegroundColor White
        Write-Host "   ‚Ä¢ Auto-d√©couverte: Activ√©e" -ForegroundColor White
        
        Write-Host ""
        Write-Host "üîó R√©cup√©ration du lien de t√©l√©chargement:" -ForegroundColor Cyan
        Write-Host "   ‚Ä¢ Connectez-vous sur: https://expo.dev" -ForegroundColor White
        Write-Host "   ‚Ä¢ Projet: AutoDiscoveryApp" -ForegroundColor White
        Write-Host "   ‚Ä¢ Builds: Derni√®re build disponible" -ForegroundColor White
        
        Write-Host ""
        Write-Host "üì± Fonctionnalit√©s de l'APK:" -ForegroundColor Cyan
        Write-Host "   ‚úÖ Auto-d√©couverte IP intelligente" -ForegroundColor White
        Write-Host "   ‚úÖ Connexion automatique au backend Docker" -ForegroundColor White
        Write-Host "   ‚úÖ Plus jamais de rebuild quand IP change" -ForegroundColor White
        Write-Host "   ‚úÖ Synchronisation globale des IPs" -ForegroundColor White
        Write-Host "   ‚úÖ R√©paration automatique des incoh√©rences" -ForegroundColor White
        Write-Host "   ‚úÖ Interface de statut de connexion" -ForegroundColor White
        
    } else {
        Write-Host ""
        Write-Host "‚ùå √âCHEC DU BUILD APK" -ForegroundColor Red
        Write-Host "=" * 60
        
        Write-Host "üîç V√©rifications √† effectuer:" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Connexion internet stable" -ForegroundColor White
        Write-Host "   ‚Ä¢ Compte EAS valide et connect√©" -ForegroundColor White
        Write-Host "   ‚Ä¢ Quota EAS disponible" -ForegroundColor White
        Write-Host "   ‚Ä¢ Configuration eas.json correcte" -ForegroundColor White
        
        Write-Host ""
        Write-Host "üõ†Ô∏è Solutions possibles:" -ForegroundColor Yellow
        Write-Host "   ‚Ä¢ Relancer: npx eas build --platform android --profile $Profile" -ForegroundColor White
        Write-Host "   ‚Ä¢ V√©rifier: npx eas build:list" -ForegroundColor White
        Write-Host "   ‚Ä¢ Nettoyer: npx eas build:cancel --all" -ForegroundColor White
    }
    
} finally {
    Pop-Location
}

# 4. R√âSUM√â FINAL
Write-Host ""
Write-Host "=" * 60
Write-Host "üìã R√âSUM√â DU BUILD FINAL" -ForegroundColor Cyan
Write-Host "=" * 60

Write-Host "üê≥ Backend Docker:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Image: ranimmn/ranouma:backend-final-18-06-2025" -ForegroundColor White
Write-Host "   ‚Ä¢ Status: Accessible sur localhost:3000 et IP PC" -ForegroundColor White
Write-Host "   ‚Ä¢ API: Toutes les routes fonctionnelles" -ForegroundColor White

Write-Host ""
Write-Host "üì± Application Mobile:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Version: 1.1.0 (versionCode: 2)" -ForegroundColor White
Write-Host "   ‚Ä¢ Auto-d√©couverte: Syst√®me intelligent activ√©" -ForegroundColor White
Write-Host "   ‚Ä¢ Compatibilit√©: Fonctionne avec tous les changements d'IP" -ForegroundColor White

if ($buildResult -eq 0) {
    Write-Host ""
    Write-Host "üéØ PROCHAINES √âTAPES:" -ForegroundColor Green
    Write-Host "   1. T√©l√©charger l'APK depuis expo.dev" -ForegroundColor White
    Write-Host "   2. Installer sur votre appareil Android" -ForegroundColor White
    Write-Host "   3. Tester la connexion automatique au backend" -ForegroundColor White
    Write-Host "   4. V√©rifier que les images s'affichent correctement" -ForegroundColor White
    Write-Host ""
    Write-Host "üéâ VOTRE SOLUTION EST MAINTENANT COMPL√àTE !" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ö†Ô∏è BUILD √Ä RELANCER:" -ForegroundColor Yellow
    Write-Host "   Utilisez: .\scripts\build-final-apk.ps1" -ForegroundColor White
}

Write-Host ""
