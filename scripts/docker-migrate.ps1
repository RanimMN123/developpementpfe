# Script PowerShell pour ex√©cuter les migrations Prisma dans Docker
# Usage: .\scripts\docker-migrate.ps1

Write-Host "üóÑÔ∏è MIGRATION DE LA BASE DE DONN√âES" -ForegroundColor Cyan
Write-Host "=" * 60

# V√©rifier que les conteneurs sont en cours d'ex√©cution
Write-Host "üîç V√©rification des conteneurs..." -ForegroundColor Yellow
$backendStatus = docker compose ps backend --format "{{.State}}"
$postgresStatus = docker compose ps postgres --format "{{.State}}"

if ($backendStatus -ne "running") {
    Write-Host "‚ùå Le conteneur backend n'est pas en cours d'ex√©cution" -ForegroundColor Red
    Write-Host "   D√©marrez d'abord l'application avec: .\scripts\docker-start.ps1" -ForegroundColor Yellow
    exit 1
}

if ($postgresStatus -ne "running") {
    Write-Host "‚ùå Le conteneur PostgreSQL n'est pas en cours d'ex√©cution" -ForegroundColor Red
    Write-Host "   D√©marrez d'abord l'application avec: .\scripts\docker-start.ps1" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Conteneurs en cours d'ex√©cution" -ForegroundColor Green

# Attendre que PostgreSQL soit pr√™t
Write-Host "‚è≥ Attente de PostgreSQL..." -ForegroundColor Yellow
do {
    $pgReady = docker compose exec postgres pg_isready -U postgres -d adminapp 2>$null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "   PostgreSQL n'est pas encore pr√™t, attente..." -ForegroundColor Yellow
        Start-Sleep -Seconds 2
    }
} while ($LASTEXITCODE -ne 0)

Write-Host "‚úÖ PostgreSQL est pr√™t" -ForegroundColor Green

# Ex√©cuter les migrations Prisma
Write-Host "üîÑ Ex√©cution des migrations Prisma..." -ForegroundColor Yellow
docker compose exec backend npx prisma migrate deploy

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Migrations ex√©cut√©es avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de l'ex√©cution des migrations" -ForegroundColor Red
    exit 1
}

# G√©n√©rer le client Prisma (au cas o√π)
Write-Host "üîß G√©n√©ration du client Prisma..." -ForegroundColor Yellow
docker compose exec backend npx prisma generate

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Client Prisma g√©n√©r√© avec succ√®s" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erreur lors de la g√©n√©ration du client Prisma" -ForegroundColor Red
}

# Optionnel: Seed de la base de donn√©es
$seed = Read-Host "Voulez-vous ex√©cuter le seed de la base de donn√©es ? (O/N)"
if ($seed -eq "O" -or $seed -eq "o" -or $seed -eq "Y" -or $seed -eq "y") {
    Write-Host "üå± Ex√©cution du seed..." -ForegroundColor Yellow
    docker compose exec backend npx prisma db seed
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Seed ex√©cut√© avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur lors de l'ex√©cution du seed" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üéâ MIGRATION TERMIN√âE !" -ForegroundColor Green
Write-Host "=" * 60
Write-Host "üìã Commandes utiles:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Voir le sch√©ma: docker compose exec backend npx prisma studio" -ForegroundColor White
Write-Host "   ‚Ä¢ Reset DB: docker compose exec backend npx prisma migrate reset" -ForegroundColor White
Write-Host "   ‚Ä¢ Logs DB: docker compose logs postgres" -ForegroundColor White
